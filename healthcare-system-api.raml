#%RAML 1.0
title: FHIR API
version: 1.0
#baseUri: http://vadp-condition-v1.0.cloudhub.io/api
baseUri: https://mocksvc.mulesoft.com/mocks/bc0dc070-252a-4b54-a02c-7f119c39bf6a/apg
types:

  base64Binary:
    type: string

  unsignedInt:
    type: integer
    minimum: 0

  decimal:
    type: number
    description: |
      A JSON number, except that exponents are not allowed or xs:decimal, except that decimals may not use exponents, and leading 0 digits are not allowed

  id:
    type: string
    #pattern: [A-Za-z0-9\-\.]{1,64}
    description: |
      Any combination of upper or lower case ASCII letters ('A'..'Z', and 'a'..'z', numerals ('0'..'9'), '-' and '.', with a length limit of 64 characters. (This might be an integer, an un-prefixed OID, UUID or any other identifier pattern that meets these constraints.)

  uri:
    type: string
    #pattern: /^([a-z0-9+.-]+):(?://(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\d*))?(/(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?|(/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@/]|%[0-9A-F]{2})*)?)(?:\?((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:/?@]|%[0-9A-F]{2})*))?$/i/

  instant:
    type: string
    pattern: ^[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))))$

  code:
    type: string
    #pattern: [^\s]+([\s]+[^\s]+)*
    description: |
      Indicates that the value is taken from a set of controlled strings defined elsewhere (see Using codes for further discussion). Technically, a code is restricted to a string which has at least one character and no leading or trailing whitespace, and where there is no whitespace other than single spaces in the contents

  xhtml:
    type: string

  date:
    type: string
    pattern: ^[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1]))?)?$
    example: 1970-08-07

  dateTime:
    type: string
    pattern: ^[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$

  time:
    type: string
    pattern: ^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\.[0-9]+)?$

  gender:
    enum: [male, female, other, unknown]

  markdown:
    type: string
    description: A string that may contain markdown syntax for optional processing by a markdown presentation engine

  ObservationRelationshipType:
    type: code
    enum: [has-member, derived-from, sequel-to, replaces, qualified-by, interfered-by]

  UnitOfTime:
    description: A unit of time (UCUM)
    type: code
    enum: [s, min, h, d, wk, mo, a]

  EncounterState:
    type: code
    enum: [planned, arrived, in-progress, onleave, finished, cancelled]

  ObservationStatus:
    type: code
    enum: [registered, preliminary, final, ammended, cancelled, entered-in-error, unknown]

  ObservationCode:
    type: code
    description: https://www.hl7.org/fhir/valueset-observation-codes.html

  Extension:
    properties:
      url: uri
      /^value(Integer|Decimal|DateTime|Date|Instant|String|Uri|Boolean|Code|Markdown|Base64Binary|Coding|CodeableConcept|Attachment|Identifier|Quantity|Range|Period|Ratio|HumanName|Address|ContactPoint|Timing|Signature|Reference)$/: integer | decimal | dateTime | date | instant | string | uri | boolean | code | markdown | base64Binary | Coding | CodeableConcept | Attachment | Identifier | Quantity | Range | Period | Ratio | HumanName | Address | ContactPoint | Timing | Signature | Reference

  Element:
    properties:
      id?: id
      extension?: Extension[]

  Duration:
    type: Quantity
    description: a length of time

  Signature:
    properties:
      type: Coding[]
      when: instant
      /^who(Uri|Reference)$/: uri | Reference
      contentType: code
      blob: base64Binary

  Timing:
    type: Element
    properties:
      event?: dateTime[]
      repeat?:
        type: Element
        properties:
          /^bounds(Duration|Range|Period)$/?: Duration | Range | Period
          count?: integer
          duration?: decimal
          durationMax?: decimal
          durationUnits?: UnitOfTime
          frequency?: integer
          frequencyMax?: integer
          period?: decimal
          periodMax?: decimal
          periodUnits?: UnitOfTime
          when?:
            type: code
            enum: [HS, WAKE, C, CM, CD, CV, AC, ACM, ACD, ACV, PC, PCM, PCD, PCV]
      code?: CodeableConcept

  Ratio:
    type: Element
    properties:
      numerator?: Quantity
      denominator?: Quantity

  Coding:
    properties:
      system?: uri
      version?: string
      code?: code
      display?: string
      userSelected?: boolean

  Meta:
    type: Element
    properties:
      versionId?: id
      lastUpdated?: instant
      profile?: uri
      security?: Coding[]
      tag?: Coding[]

  Narrative:
    properties:
      status: code
      div: xhtml

  CodeableConcept:
    type: Element
    properties:
      coding?: Coding[]
      text?: string

  SampledData:
    description: A series of measurements taken by a device
    type: Element
    properties:
      origin: SimpleQuantity
      period: decimal
      factor?: decimal
      lowerLimit?: decimal
      upperLimit?: decimal
      dimensions: positiveInt
      data: string

  Period:
    type: Element
    properties:
      start?: datetime
      end?: datetime

  Reference:
    type: Element
    properties:
      reference?: string
      display?: string

  Identifier:
    properties:
      use?: code
      type?: CodeableConcept
      system?: uri
      value?: string
      period?: Period
      assigner?: Reference

  Range:
    type: Element
    properties:
      low?: integer
      high?: integer

  Quantity:
    type: Element
    properties:
      value?: decimal
      comparator?:
        type: code
        enum: ['<', '<=', '>=', '>']
      unit?: string
      system?: uri
      code?: code

  SimpleQuantity: Quantity

  Age: Quantity

  positiveInt:
    type: integer
    minimum: 0

  HumanName:
    type: Element
    properties:
      use?:
        type: code
        enum: [usual, official ,temp, nickname, anonymous, old, maiden]
      text?:
      family?: string[]
      given?: string[]
      prefix?: string[]
      suffix?: string[]
      period?: Period

  ContactPoint:
    type: Element
    properties:
      system?:
        enum: [phone,fax,email,pager,other]
      value?:
      use?:
      rank?:
        type: positiveInt
      period?: Period

  BackboneElement:
    type: Element
    properties:
      modifierExtension?: Extension

  Address:
    type: Element
    properties:
      use?:
        type: code
        enum: [home, work, temp, old]
      type?:
        type: code
        enum: [postal, physical, both]
      text?:
      line?: string[]
      city?:
      district?:
      state?:
      postalCode?:
      country?:
      period?: Period

  Attachment:
    type: Element
    properties:
      contentType?:
        type: code
        description: Mime type of the content, with charset etc.
      language?:
        type: code
        description: Human language of the content (BCP-47)
      data?: base64Binary
      url?: uri
      size?: unsignedInt
      hash?: base64Binary
      title?: string
      creation?: dateTime

  Annotation:
    type: Element
    properties:
      /^author(Reference|String)$/?: Reference | string
      time?: dateTime
      text?: string

  Resource:
    properties:
      id?: id
      meta?: Meta
      implicitRules?: uri
      language?: code

  DomainResource:
    type: Resource
    properties:
      # where is resourceType defined in the spec?
      resourceType: string
      text:
        type: Narrative
      contained?: Resource[]
      extension?: Extension[]
      modifierExtension?: Extension[]

  Condition:
    type: DomainResource
    properties:
      identifier?: Identifier[]
      patient: Reference
      encounter?: Reference
      asserter?: Reference
      dateRecorded?: date-only
      code: CodeableConcept
      category?: CodeableConcept
      clinicalStatus?: code
      verificationStatus: code
      severity?: CodeableConcept
      /^onset(DateTime|Period|Range|String)$/?: datetime | Age | Period | Range | string
      /^abatement(DateTime|Quantity|Boolean|Range|String)$/?: datetime | Age | boolean | Range | string
      stage?:
        type: BackboneElement
        properties:
          summary?: CodeableConcept
          asessment?: Reference
      evidence?:
        type: BackboneElement
        properties:
          code?: CodeableConcept
          detail?: any
      bodySite?: CodeableConcept
      notes?:
    additionalProperties: false

  AllergyIntolerance:
    type: DomainResource
    properties:
      identifier?: Identifier[]
      onset?: dateTime
      recordedDate?: dateTime
      recorder?: Reference
      patient: Reference
      reporter?: Reference
      substance: CodeableConcept
      status?:
        type: code
        enum: [active, unconfirmed, confirmed, inactive, resolved, refuted, entered-in-error]
      criticality?:
        type: code
        enum: [CRITL, CRITH, CRITU]
      type?:
        type: code
        enum: [allergy, intolerance]
      category?:
        type: code
        enum: [food, medication, environment, other]
      lastOccurence?: dateTime
      note?: Annotation
      reaction?:
        type: array
        items:
          type: BackboneElement
          properties:
            substance?: CodeableConcept
            certainty?:
              type: code
              enum: [unlikely, likely, confirmed]
            manifestation:
              type: array
              minItems: 1
              items:
                type: CodeableConcept
            description?: string
            onset?: dateTime
            severity?:
              type: code
              enum: [mild, moderate, severe]
            exposureRoute?: CodeableConcept
            note?: Annotation

  Device:
    description: An instance of a manufactured te that is used in the provision of healthcare
    type: DomainResource
    properties:
      identifier?: Identifier[]
      type: CodeableConcept
      note?: Annotation[]
      status?:
        type: code
        enum: [available, not-available, enetered-in-error]
      manufacturer?: string
      model?: string
      version?: string
      manufactureDate?: dateTime
      expiry?: dateTime
      udi?: string
      lotNumber?: string
      owner?: Reference
      location?: Reference
      patient?: Reference
      contact?: ContactPoint[]
      url?: uri

  Appointment:
    description: |
      A booking of a healthcare event among patient(s), practitioner(s), related person(s) and/or device(s) for a specific date/time. This may result in one or more Encounter(s)
      Only proposed or cancelled appointments can be missing start/end dates
      Either start and end are specified, or neither
    type: DomainResource
    properties:
      identifier?: Identifier[]
      status:
        type: code
        enum: [proposed, pending, booked, arrived, fulfilled, cancelled, noshow]
      type?: CodeableConcept
      reason?: CodeableConcept
      priority?: unsignedInt
      description?: string
      start?: instant
      end?: instant
      minutesDuration?: positiveInt
      slot?: Reference[]
      comment?: string
      participant:
        type: array
        minItems: 1
        items:
          type: BackboneElement
          properties:
            type?: CodeableConcept
            actor?: Reference
            required?:
              type: code
              enum: [required, optional, information-only]
            status:
              type: code
              enum: [accepted, declined, tentative, needs-action]

  Slot:
    description: |
      A slot of time on a schedule that may be available for booking appointments
    type: DomainResource
    properties:
      identifier?: Identifier[]
      type?: CodeableConcept
      schedule: Reference
      freeBusyType:
        type: code
        enum: [busy, free, busy-unavailable, busy-tentative]
      start: instant
      end: instant
      overbooked?: boolean
      comment?: string

  Schedule:
    description: |
      A container for slot(s) of time that may be available for booking appointments
    type: DomainResource
    properties:
      identifier?: Identifier[]
      type?: CodeableConcept[]
      actor: Reference
      planningHorizon?: Period
      comment?: string

  Patient:
    description: Information about an individual or animal receiving health care services
    type: DomainResource
    properties:
      identifier?: Identifier[]
      active?:
        type: boolean
        description: Whether this patient's record is in active use
      name?: HumanName[]
      telecom?: ContactPoint[]
      gender?: gender
      birthDate?: date
      /^deceased(Boolean|DateTime)$/?: boolean | dateTime
      address?: Address[]
      maritalStatus?: CodeableConcept
      /^multipleBirth(Boolean|Integer)$/?: boolean | integer
      photo?: Attachment[]
      contact?:
        description: |
          A contact party (e.g. guardian, partner, friend) for the patient
          SHALL at least contain a contact's details or a reference to an organization
        type: array
        items:
          type: BackboneElement
          properties:
            relationship?: CodeableConcept[]
            name?: HumanName
            telecom?: ContactPoint[]
            address?: Address
            gender?: gender
            organization?: Reference
            period?:
              description: |
                The period during which this contact person or organization is valid to be contacted relating to this patient
              type: Period
      animal?:
        description: This patient is known to be an animal (non-human)
        type: BackboneElement
        properties:
          species: CodeableConcept
          breed?: CodeableConcept
          genderStatus?: CodeableConcept
      communication?:
        description: |
          A list of Languages which may be used to communicate with the patient about his or her health
        type: array
        items:
          type: BackboneElement
          properties:
            language: CodeableConcept
            preferred?: boolean
      careProvider?: Reference[]
      managingOrganization?:
        description: Organization that is the custodian of the patient record
        type: Reference
      link?:
        description: Link to another patient resource that concerns the same actual person
        type: BackboneElement
        properties:
          other: Reference
          type:
            type: code
            enum: [replace, refer, seealso]

  Practitioner:
    description:
    type: DomainResource
    properties:
      identifier?: Identifier[]
      active?:
        description: Whether this practitioner's record is in active use
        type: boolean
      name?: HumanName[]
      telecom?: ContactPoint[]
      address?: Address[]
      gender?: gender
      birthDate?: date
      photo?: Attachment[]
      practitionerRole?:
        description: |
          Roles/organizations the practitioner is associated with
        type: array
        items:
          type: BackboneElement
          properties:
            managingOrganization?: Reference
            role?: CodeableConcept
            specialty?: CodeableConcept[]
            period?:
              description: |
                The period during which the practitioner is authorized to perform in these role(s)
              type: Period
            location?: Reference[]
            healthcareService?: Reference[]
      qualification?:
        description: |
          Qualifications obtained by training and certification
        type: array
        items:
          type: BackboneElement
          properties:
            identifier?: Identifier[]
            code: CodeableConcept
            period?:
              description: |
                Period during which the qualification is valid
              type: Period
            issuer?: Reference
      communication?: CodeableConcept[]

  Medication:
    type: DomainResource
    properties:
      code?: CodeableConcept
      isBrand?: boolean
      manufacturer?: Reference
      product?:
        type: BackboneElement
        properties:
          form?: CodeableConcept
          ingredient?:
            type: array
            items:
              type: BackboneElement
              properties:
                item: Reference
                amount?: Ratio
          batch?:
            type: array
            items:
              type: BackboneElement
              properties:
                lotNumber?: string
                expirationDate?: dateTime
      package?:
        type: BackboneElement
        properties:
          container?: CodeableConcept
          content?:
            type: BackboneElement
            properties:
              item: Reference
              amount?: SimpleQuantity

  Encounter:
    type: DomainResource
    properties:
      identifier?: Identifier[]
      status: EncounterState
      statusHistory?:
        type: array
        items:
          type: BackboneElement
          properties:
            status: EncounterState
            period: Period
      class:
        type: code
        enum: [inpatient, outpatient, ambulatory, emergency]
      type?: CodeableConcept[]
      priority?: CodeableConcept
      patient?: Reference
      episodeOfCare?: Reference[]
      incomingReferral?: Reference[]
      participant?:
        type: array
        items:
          type: BackboneElement
          properties:
            type?: CodeableConcept
            period?: Period
            individual?: Reference
      appointment?: Reference
      period?: Period
      length?: Duration
      reason?: CodeableConcept[]
      indication?: Reference[]
      hospitalization?:
        type: BackboneElement
        properties:
          preAdmissionIdentifier?: Identifier
          origin?: Reference
          admitSource?: CodeableConcept
          admittingDiagnosis?: Reference[]
          reAdmission?: CodeableConcept
          dietPreference?: CodeableConcept[]
          specialCourtesy?: CodeableConcept[]
          specialArrangement?: CodeableConcept[]
          destination?: Reference
          dischargeDisposition?: CodeableConcept
          dischargeDiagnosis?: Reference[]
      location?:
        type: array
        items:
          type: BackboneElement
          properties:
            location: Reference
            status?:
              type: code
              enum: [planned, active, reserved, completed]
            period?: Period
      serviceProvider?: Reference
      partOf?: Reference

  Observation:
    type: DomainResource
    properties:
      identifier?: Identifier[]
      status: ObservationStatus
      category?: CodeableConcept
      code: CodeableConcept
      subject?: Reference
      encounter?: Reference
      /^effective(DateTime|Period)$/?: dateTime | Period
      issued?: instant
      performer?: Reference[]
      /^value(Quantity|CodeableConcept|String|Range|Ratio|SampledData|Attachment|Time|DateTime|Period)$/?: Quantity | CodeableConcept | string | Range | Ratio | SampledData | Attachment |  time | dateTime | Period
      dataAbsentReason?: CodeableConcept
      interpretation?: CodeableConcept
      comments?: string
      bodySite?: CodeableConcept
      method?: CodeableConcept
      specimen?: Reference
      device?: Reference
      referenceRange?:
        type: array
        items:
          type: BackboneElement
          properties:
            low?: SimpleQuantity
            high?: SimpleQuantity
            meaning?: CodeableConcept
            age?: Range
            text?: string
      related?:
        type: array
        items:
          type: BackboneElement
          properties:
            type?: ObservationRelationshipType
            target: Reference
      component?:
        type: array
        items:
          type: BackboneElement
          properties:
            code: CodeableConcept
            /^value(Quantity|CodeableConcept|String|Range|Ratio|SampledData|Attachment|Time|DateTime|Period)$/?: Quantity | CodeableConcept | string | Range | Ratio | SampledData | Attachment | time | dateTime | Period
            dataAbsentReason?: CodeableConcept
            referenceRange?:
              type: array
              items:
                type: BackboneElement
                properties:
                  low?: SimpleQuantity
                  high?: SimpleQuantity
                  meaning?: CodeableConcept
                  age?: Range
                  text?: string
  MedicationOrder:
    type: DomainResource
    properties:
      identifier?: Identifier[]
      dateWritten?: dateTime
      status?:
        type: code
        enum: [active, on-hold, completed, entered-in-error, stopped, draft]
      dateEnded?: dateTime
      reasonEnded?: CodeableConcept
      patient?: Reference
      prescriber?: Reference
      encounter?: Reference
      /^reason(CodeableConcept|Reference)$/?: CodeableConcept | Reference
      note?: string
      /^medication(CodeableConcept|String)$/: CodeableConcept | string
      dosageInstruction?:
        type: array
        items:
          type: BackboneElement
          properties:
            text?:
            additionalInstructions?: CodeableConcept
            timing?: Timing
            /^asNeeded(Boolean|CodeableConcept)$/?: boolean | CodeableConcept
            /^site(CodeableConcept|Reference)$/?: CodeableConcept | Reference
            route?: CodeableConcept
            method?: CodeableConcept
            /^dose(Range|Quantity)$/?: Range | Quantity
            /^rate(Ratio|Range)$/?: Ratio | Range
            maxDosePerPeriod?: Ratio
      dispenseRequest?:
        type: BackboneElement
        properties:
          /^medication(CodeableConcept|Reference)$/: CodeableConcept | Reference
          validityPeriod?: Period
          numberOfRepeatsAllowed?: positiveInt
          quantity?: SimpleQuantity
          expectedSupplyDuration?: Duration
      substitution?:
        type: BackboneElement
        properties:
          type?: CodeableConcept
          reason?: CodeableConcept
      priorPrescription?: Reference

  ConditionEntry:
    type: Entry
    properties:
      resource?: Condition

  ObservationEntry:
    type: Entry
    properties:
      resource?: Observation

  MedicationOrderEntry:
    type: Entry
    properties:
      resource?: MedicationOrder

  MedicationEntry:
    type: Entry
    properties:
      resource?: Medication


  PatientEntry:
    type: Entry
    properties:
      resource?: Patient

  AllergyIntoleranceEntry:
    type: Entry
    properties:
      resource?: AllergyIntolerance

  SlotEntry:
    type: Entry
    properties:
      resource?: Slot

  EncounterEntry:
    type: Entry
    properties:
      resource?: Encounter

  DeviceEntry:
    type: Entry
    properties:
      resource?: Device

  AppointmentEntry:
    type: Entry
    properties:
      resource?: Appointment

  ScheduleEntry:
    type: Entry
    properties:
      resource?: Schedule

  PractitionerEntry:
    type: Entry
    properties:
      resource?: Practitioner

  Entry:
   type: BackboneElement
   properties:
     link?:
      type: array
      items:
        type: BackboneElement
        properties:
          relation: string
          url: uri
     fullUrl?: uri
     search?:
       type: BackboneElement
       properties:
         mode?:
           type: code
           enum: [match, include, outcome]
         score?: decimal
     request?:
       type: BackboneElement
       properties:
         method:
           type: code
           enum: [GET, PUT, POST, DELETE]
         url: uri
         ifNoneMatch?: string
         ifModifiedSince?: instant
         ifMatch: string
         ifNoneExist: string
     response?:
       type: object
       properties:
         status: string
         location?: uri
         etag?: string
         lastModified?: instant


  #not to be used directly - use more specific types: GeneralBundle or <resourceName>Bundle
  Bundle:
    type: Resource
    properties:
      resourceType?: string
      type:
        type: code
        enum: [document, message, transaction,  transaction-response, batch, batch-response,  history, searchset, collection]
      total?: unsignedInt
      link?:
        type: array
        items:
          type: BackboneElement
          properties:
            relation: string
            url: uri
      signature?: Signature

  GeneralBundle:
    type: Bundle
    properties:
      entry?:
        type: array
        items:
          type: BackboneElement
          properties:
            link?:
              type: array
              items:
                type: BackboneElement
                properties:
                  relation: string
                  url: uri
            fullUrl?: uri
            resource?: Resource
            search?:
              type: BackboneElement
              properties:
                mode?:
                  type: code
                  enum: [match, include, outcome]
                score?: decimal
            request?:
              type: BackboneElement
              properties:
                method:
                  type: code
                  enum: [GET, PUT, POST, DELETE]
                url: uri
                ifNoneMatch?: string
                ifModifiedSince?: instant
                ifMatch: string
                ifNoneExist: string
            response?:
              type: BackboneElement
              properties:
                status: string
                location?: uri
                etag?: string
                lastModified?: instant


  ConditionBundle:
    type: Bundle
    properties:
      entry?: ConditionEntry[]


  ObservationBundle:
    type: Bundle
    properties:
      entry?: ObservationEntry[]


  MedicationBundle:
    type: Bundle
    properties:
      entry?: MedicationEntry[]


  EncounterBundle:
    type: Bundle
    properties:
      entry?: EncounterEntry[]

  SlotBundle:
    type: Bundle
    properties:
      entry?: SlotEntry[]


  MedicationOrderBundle:
    type: Bundle
    properties:
      entry?: MedicationOrderEntry[]

  IntoleranceBundle:
    type: Bundle
    properties:
      entry?: AllergyIntoleranceEntry[]

  DeviceBundle:
    type: Bundle
    properties:
      entry?: DeviceEntry[]

  PatientBundle:
    type: Bundle
    properties:
      entry?: PatientEntry[]

  AppointmentBundle:
    type: Bundle
    properties:
      entry?: AppointmentEntry[]

  ScheduleBundle:
    type: Bundle
    properties:
      entry?: ScheduleEntry[]

  PractitionerBundle:
    type: Bundle
    properties:
      entry?: PractitionerEntry[]

  AllergyIntoleranceBundle:
    type: Bundle
    properties:
      entry?: AllergyIntoleranceEntry[]

  Conformance:
    type: DomainResource
    properties:
      url?: uri
      version?:
      name?:
      status?:
        type: code
        enum: [draft, active, retired]
      experimental?: boolean
      publisher?:
      contact?:
        type: array
        items:
          type: BackboneElement
          properties:
            name?:
            telecom?: ContactPoint[]
      date: dateTime
      description?:
      requirements?:
      copyright?:
      kind:
        type: code
        enum: [instance, capability, requirements]
      software?:
        type: BackboneElement
        properties:
          name:
          version?:
          releaseDate?: dateTime
      implementation?:
        type: BackboneElement
        properties:
          description:
          url?: uri
      fhirVersion: id
      acceptUnknown:
        type: code
        enum: [no, extensions, elements, both ]
      format:
        type: array
        items:
          type: code
          enum: [xml, json, application/xml, application/json]
      profile?: Reference[]
      rest?:
        type: array
        items:
          type: BackboneElement
          properties:
            mode:
              type: code
              enum: [client, server]
            documentation?:
            security?:
              type: BackboneElement
              properties:
                cors?: boolean
                service?: CodeableConcept[]
                description?:
                certificate?:
                  type: array
                  items:
                    type: BackboneElement
                    properties:
                      type?: code
                      blob?: base64Binary
            resource:
              type: array
              items:
                type: BackboneElement
                properties:
                  type:
                    type: code
                    enum: [] # Resource Type list TODO:
                  profile?: Reference
                  interaction:
                    type: array
                    items:
                      type: BackboneElement
                      properties:
                        code:
                          type: code
                          enum: [read, vread, update, delete, history-instance, validate, history-type, create, search-type]
                        documentation?:
                  versioning?:
                    type: code
                    enum: [no-version, versioned, versioned-update]
                  readHistory?: boolean
                  updateCreate?: boolean
                  conditionalCreate?: boolean
                  conditionalUpdate?: boolean
                  coditionalDelete?:
                    type: code
                    enum: [not-supported, single, multiple]
                  searchInclude?:
                  searchRevInclude?:
                  searchParam?:
                    type: array
                    items:
                      type: BackboneElement
                      properties:
                        name:
                        definition?:
                        type:
                          type: code
                          enum: [number, date, string, token, reference, composite, quantity, uri]
                        documentation?:
                        target?:
                          type: array
                          items:
                            type: code
                            enum: [missing, exact, contains, not, text, in, not-in, below, above, type]
                        chain?: string[]
            interaction?:
              type: array
              items:
                type: BackboneElement
                properties:
                  code:
                    type: code
                    enum: [transaction, search-system, history-system]
                  documentation?:
            transactionMode?:
              type: code
              enum: [not-supported, batch, transaction, both]
            searchParam?:
              type: array
              items:
                type: BackboneElement
                properties:
                  name:
                  definition?:
                  type:
                    type: code
                    enum: [number, date, string, token, reference, composite, quantity, uri]
                  documentation?:
                  target?:
                    type: array
                    items:
                      type: code
                      enum: [missing, exact, contains, not, text, in, not-in, below, above, type]
                  chain?: string[]
            operation?:
              type: array
              items:
                type: BackboneElement
                properties:
                  name:
                  definition:
            compartment?: uri[]
      messaging?:
        type: array
        items:
          type: BackboneElement
          properties:
            endpoint?:
              type: array
              items:
                type: BackboneElement
                properties:
                  protocol: Coding
                  address: uri
            reliableCache?: unsignedInt
            documentation: string
            event:
              type: array
              items:
                type: BackboneElement
                properties:
                  code: Coding
                  category?:
                    type: code
                    enum: [Consequence, Currency, Notification]
                  mode:
                    type: code
                    enum: [sender, receiver]
                  focus:
                    type: code
                    enum: [] #TODO: Resource Type
                  request: Reference
                  response: Reference
                  documentation?:
      document?:
        type: array
        items:
          type: BackboneElement
          properties:
            mode:
              type: code
              enum: [producer, consumer]
            docuemntation?:
            profile:


mediaType: [application/xml+fhir, application/json+fhir]

traits:

  vread:
    queryParameters:
      _format:
        required: false
        enum: [application/json, application/xml]
    responses:
      200:
        headers:
          ETag:
          Last-Modified: instant
        body:
          application/json:
            type: <<resourceName>>

  read:
    queryParameters:
      _format:
        required: false
        enum: [application/json, application/xml]
      _summary:
        required: false
        enum: ['true', 'false', text, data]
    headers:
      If-Modified-Since:
        type: instant
        required: false
      If-None-Match:
        required: false
    responses:
      304:
        description: Not Modified

  update:
    responses:
      200:
        description: Updated
      201:
        description: Created
        headers:
          Location:
            example: http://xxx/condidition/123/_history/1
          Last-Modified: datetime
          ETag:
            example: '1.0'
      422:
        description: |
          Unprocessable Entity - the proposed resource violated applicable FHIR profiles or server business rules

  delete:
    responses:
      204:
        description: Deleted

  create:
    responses:
      201:
        description: Created
        headers:
          Location:
            example: http://xxx/Condidition/123/_history/1
          Last-Modified: datetime
          ETag:
            example: '1.0'

  search:
    queryParameters: !include queryParams/resourceSearchParams.yaml

    responses:
      200:
        body:
          application/json:
            type: <<bundleName>>

  conformance:
    responses:
      200:
        body:
          application/json:
            type: Conformance
          application/xml:
            type: Conformance

  history:
    queryParameters:
      _count:
        required: false
      _since:
        required: false
    responses:
      200:
        body:
          application/json:
            type: <<bundleName>>


  patientSearch:
    queryParameters: !include queryParams/resources/patientSearch.yaml

  practitionerSearch:
    queryParameters: !include queryParams/resources/practitionerSearch.yaml

  medicationSearch:
    queryParameters: !include queryParams/resources/medicationParams.yaml

  medicationOrderSearch:
    queryParameters: !include queryParams/resources/medicationOrderParams.yaml

  conditionSearch:
    queryParameters: !include queryParams/resources/conditionParams.yaml

  encounterSearch:
    queryParameters: !include queryParams/resources/encounterParams.yaml


  appointmentSearch:
    queryParameters: !include queryParams/resources/appointmentParams.yaml

  scheduleSearch:
    queryParameters: !include queryParams/resources/scheduleParams.yaml

  slotSearch:
    queryParameters: !include queryParams/resources/slotParams.yaml


  deviceSearch:
    queryParameters: !include queryParams/resources/deviceParams.yaml

  allergyIntoleranceSearch:
    queryParameters: !include queryParams/resources/allergyIntoleranceParams.yaml

  observationSearch:
    queryParameters: !include queryParams/resources/observationParams.yaml


resourceTypes:

  fhirResourceType:
    post:
      description: |
        The create interaction creates a new resource in a server-assigned location.
        If the client wishes to have control over the id of a newly submitted resource, it should use the update interaction instead.
      is: [create]
      headers:
        If-None-Exist:
          required: false
          description: name=value selective criteria
      body:
        application/json:
          type: <<resourcePathName>>
      responses:
        200:
          description: No match, resource created.
        412:
          description: Precondition Failed error indicating the client's criteria were not selective enough.
    get:
      description: This interaction searches a set of resources based on some filter criteria.
      is: [{search: { bundleName: <<resourcePathName>>Bundle}}]
    put:
      description: The conditional update interaction allows a client to update an existing resource based on some identification criteria, rather than by logical id.
      is: [update]
      queryParameters:
      responses:
        412:
          description: |
            Precondition Failed error indicating the client's criteria were not selective enough
    delete:
      description: The conditional delete interaction allows a client to delete an existing resource based on some selection criteria, rather than by a specific logical id.
      is: [delete]
      queryParameters:
      responses:
        404:
          description: Not found
        412:
          description: Precondition Failed error indicating the client's criteria were not selective enough.

  fhirResource:
    get:
      description: The read interaction accesses the current contents of a resource.
      is: [read]
      responses:
        200:
          body:
            application/json:
              type: <<resourcePathName>>
    put:
      description: The update interaction creates a new current version for an existing resource or creates an initial version if no resource already exists for the given id.
      is: [update]
      body:
        application/json:
          type: <<resourcePathName>>
    delete:
      description: The delete interaction removes an existing resource.
      is: [delete]

  fhirCompartment:
    get:
      is: [{search: { bundleName: <<resourcePathName>>Bundle}}]

  fhirSearch:
    post:
      description: This interaction searches a set of resources based on some filter criteria.
      body:
        application/x-www-form-urlencoded:
          properties: !include queryParams/resourceSearchParams.yaml
      responses:
        200:
          body:
            application/json:
              type: GeneralBundle
    get:
      description: This interaction searches a set of resources based on some filter criteria.
      is: [{search: { bundleName: <<bundleName>>}}]


  fhirVersionedResource:
    get:
      description: The vread interaction preforms a version specific read of the resource.
      is: [vread: { resourceName: <<resourceName>> }]

  fhirHistory:
    get:
      description: The history interaction retrieves the history of either a particular resource or all resources of a given type.
      is: [{history: { bundleName: <<bundleName>>}}]





/:
  get:
    is: [{search: { bundleName: GeneralBundle}}]
    queryParameters:
      _format:
        required: false
        enum: [application/json, application/xml]
  options:
    is: [conformance]
    queryParameters:
      _format:
        required: false
        enum: [application/json, application/xml]

  /_history:
    type: { fhirHistory : { bundleName: GeneralBundle } }

/metadata:
  get:
    is: [conformance]
    queryParameters:
    responses:
      200:
        headers:
          ETag:
            example: condition
        body:
          application/json:
            type: Conformance

/AllergyIntolerance:
  type: fhirResourceType
  get:
    is: [ allergyIntoleranceSearch ]
  put:
    is: [ allergyIntoleranceSearch ]
  delete:
    is: [ allergyIntoleranceSearch ]
  /_history:
    type: { fhirHistory: { bundleName: AllergyIntoleranceBundle } }
    is: [ allergyIntoleranceSearch ]
  /{id}:
    type: fhirResource
    /_history:
      type: { fhirHistory: { bundleName: AllergyIntoleranceBundle } }
      /{vid}:
        type: { fhirVersionedResource: { resourceName: AllergyIntolerance } }
  /_search:
    type: { fhirSearch: { bundleName: AllergyIntoleranceBundle } }
    get:
      is: [ allergyIntoleranceSearch ]

/Appointment:
  type: fhirResourceType
  get:
    is: [ appointmentSearch ]
  put:
    is: [ appointmentSearch ]
  delete:
    is: [ appointmentSearch ]
  /_history:
    type: { fhirHistory: { bundleName: AppointmentBundle } }
    is: [ appointmentSearch ]
  /{id}:
    type: fhirResource
    /_history:
      type: { fhirHistory: { bundleName: AppointmentBundle } }
      /{vid}:
        type: { fhirVersionedResource: { resourceName: Appointment } }
  /_search:
    type: { fhirSearch: { bundleName: AppointmentBundle } }
    get:
      is: [ appointmentSearch ]

/Condition:
  type: fhirResourceType
  get:
    is: [ conditionSearch ]
  put:
    is: [ conditionSearch ]
  delete:
    is: [ conditionSearch ]
  /_history:
    type: { fhirHistory: { bundleName: ConditionBundle } }
    is: [ conditionSearch ]
  /{id}:
    type: fhirResource

    /_history:
      type: { fhirHistory: { bundleName: ConditionBundle } }
      /{vid}:
        type: { fhirVersionedResource: { resourceName: Condition } }
  /_search:
    type: { fhirSearch: { bundleName: ConditionBundle } }
    get:
      is: [ conditionSearch ]

/Device:
  type: fhirResourceType
  get:
    is: [ deviceSearch ]
  put:
    is: [ deviceSearch ]
  delete:
    is: [ deviceSearch ]
  /_history:
    type: { fhirHistory: { bundleName: DeviceBundle } }
    is: [ deviceSearch ]
  /{id}:
    type: fhirResource
    /_history:
      type: { fhirHistory: { bundleName: DeviceBundle } }
      /{vid}:
        type: { fhirVersionedResource: { resourceName: Device } }
  /_search:
    type: { fhirSearch: { bundleName: DeviceBundle } }
    get:
      is: [ deviceSearch ]

/Encounter:
  type: fhirResourceType
  get:
    is: [ encounterSearch ]
  put:
    is: [ encounterSearch ]
  delete:
    is: [ encounterSearch ]
  /_history:
    type: { fhirHistory: { bundleName: EncounterBundle } }
    is: [ encounterSearch ]
  /{id}:
    type: fhirResource
    /_history:
      type: { fhirHistory: { bundleName: EncounterBundle } }
      /{vid}:
        type: { fhirVersionedResource: { resourceName: Encounter } }
  /_search:
    type: { fhirSearch: { bundleName: EncounterBundle } }
    get:
      is: [ encounterSearch ]

/Medication:
  type: fhirResourceType
  get:
    is: [ medicationSearch ]
  put:
    is: [ medicationSearch ]
  delete:
    is: [ medicationSearch ]
  /_history:
    type: { fhirHistory: { bundleName: MedicationBundle } }
    is: [ medicationSearch ]
  /{id}:
    type: fhirResource
    /_history:
      type: { fhirHistory: { bundleName: MedicationBundle } }
      /{vid}:
        type: { fhirVersionedResource: { resourceName: Medication } }
  /_search:
    type: { fhirSearch: { bundleName: MedicationBundle } }
    get:
      is: [ medicationSearch ]

/MedicationOrder:
  type: fhirResourceType
  get:
    is: [ medicationOrderSearch ]
  put:
    is: [ medicationOrderSearch ]
  delete:
    is: [ medicationOrderSearch ]
  /_history:
    type: { fhirHistory: { bundleName: MedicationOrderBundle } }
    is: [ medicationOrderSearch ]
  /{id}:
    type: fhirResource
    /_history:
      type: { fhirHistory: { bundleName: MedicationOrderBundle } }
      /{vid}:
        type: { fhirVersionedResource: { resourceName: MedicationOrder } }
  /_search:
    type: { fhirSearch: { bundleName: MedicationOrderBundle } }
    get:
      is: [ medicationOrderSearch ]

/Observation:
  type: fhirResourceType
  get:
    is: [ observationSearch ]
  put:
    is: [ observationSearch ]
  delete:
    is: [ observationSearch ]
  /_history:
    type: { fhirHistory: { bundleName: ObservationBundle } }
    is: [ observationSearch ]
  /{id}:
    type: fhirResource
    /_history:
      type: { fhirHistory: { bundleName: ObservationBundle } }
      /{vid}:
        type: { fhirVersionedResource: { resourceName: Observation } }
  /_search:
    type: { fhirSearch: { bundleName: ObservationBundle } }
    get:
      is: [ observationSearch ]

/Patient:
  type: fhirResourceType
  get:
    is: [ patientSearch ]
  put:
    is: [ patientSearch ]
  delete:
    is: [ patientSearch ]
  /_history:
    type: { fhirHistory: { bundleName: PatientBundle } }
    is: [patientSearch]
  /{id}:
    type: fhirResource
    /_history:
      type: { fhirHistory: { bundleName: PatientBundle } }
      /{vid}:
        type: { fhirVersionedResource: { resourceName: Patient } }
    /Condition:
      type:  fhirCompartment
      is: [ conditionSearch ]
    /Observation:
      type: fhirCompartment
      is: [ observationSearch ]
    /MedicationOrder:
      type: fhirCompartment
      is: [ medicationOrderSearch ]
    /Appointment:
      type: fhirCompartment
      is: [ appointmentSearch ]
    /AllergyIntolerance:
      type: fhirCompartment
      is: [ allergyIntoleranceSearch ]
  /_search:
    type: { fhirSearch: { bundleName: PatientBundle } }
    get:
      is: [patientSearch]


/Practitioner:
  type: fhirResourceType
  get:
    is: [ practitionerSearch ]
  put:
    is: [ practitionerSearch ]
  delete:
    is: [ practitionerSearch ]
  /_history:
    type: { fhirHistory: { bundleName: PractitionerBundle } }
    is: [ practitionerSearch ]
  /{id}:
    type: fhirResource
    /_history:
      type: { fhirHistory: { bundleName: PractitionerBundle } }
      /{vid}:
        type: { fhirVersionedResource: { resourceName: Practitioner } }
    /Schedule:
      type: fhirCompartment
      is: [ scheduleSearch ]
    /Appointment:
      type: fhirCompartment
      is: [ appointmentSearch ]
  /_search:
    type: { fhirSearch: { bundleName: PractitionerBundle } }
    get:
      is: [practitionerSearch]

/Schedule:
  type: fhirResourceType
  get:
    is: [ scheduleSearch ]
  put:
    is: [ scheduleSearch ]
  delete:
    is: [ scheduleSearch ]
  /_history:
    type: { fhirHistory: { bundleName: ScheduleBundle } }
    is: [ scheduleSearch ]
  /{id}:
    type: fhirResource
    /_history:
      type: { fhirHistory: { bundleName: ScheduleBundle } }
      /{vid}:
        type: { fhirVersionedResource: { resourceName: Schedule } }
  /_search:
    type: { fhirSearch: { bundleName: ScheduleBundle } }
    get:
      is: [ scheduleSearch ]

/Slot:
  type: fhirResourceType
  get:
    is: [ slotSearch ]
  put:
    is: [ slotSearch ]
  delete:
    is: [ slotSearch ]
  /_history:
    type: { fhirHistory: { bundleName: SlotBundle } }
    is: [ slotSearch ]
  /{id}:
    type: fhirResource
    /_history:
      type: { fhirHistory: { bundleName: SlotBundle } }
      /{vid}:
        type: { fhirVersionedResource: { resourceName: Slot } }
  /_search:
    type: { fhirSearch: { bundleName: SlotBundle } }
    get:
      is: [slotSearch]
